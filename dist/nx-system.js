"use strict";nxQuerySystem=document.querySelector("nx-system"),nxQueryLocalize={},Polymer({is:"nx-system",properties:{role:{type:Object,value:[{path:"app1/page1",role:["admin","manager","user1"]}]}},observers:["_routePageChanged(route)"],created:function(){"undefined"==typeof localStorage.nxLanguage&&localStorage.setItem("nxLanguage",initSystem.language);var a=jwt_decode("eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoiVXNlcjEiLCJyb2xlIjoiYWRtaW4ifQ.oRx_ieJoxSZPv7Y8lM03Qv8Qb24PVmuFpWBUxWEkBcg");this.auth=a},_routePageChanged:function(a){var e=this,t={};if("/"==a.path){var o=initSystem.indexPath.split("/");t={app:o[1],page:o[2]}}else t="undefined"==typeof a.path.split("/")[2]?{app:"error",page:"404"}:this.routeData;var l=function(){var a=document.createElement(t.app+"-"+t.page);a.route=t,e.getLocales(e.layout,t.app,function(o){if(mergeLocales=o,e.layout!=e.oldLayout)if("layout-main"!=initSystem.layout){var l=function(){var o=e.$$("tag-app-load");o.innerHTML="";var l=document.createElement(e.layout);l.route=t,l.page=a,o.appendChild(l)};e.importHref(e.resolveUrl("/src/template/"+e.layout+"/"+e.layout+".html"),function(a){l()},function(a){e.changePath("/error/404")},!0)}else l();else if("undefined"==typeof e.layout){var n=e.$$("tag-app-load");n.innerHTML="",n.appendChild(a)}else{var n=e.$$("tag-app-load>"+e.layout);n.route=t,n.page=a}e.oldLayout=e.layout})};this.checkRole(t)&&(t={app:"error",page:"403"}),this.importHref(this.resolveUrl("/src/apps/"+t.app+"/"+t.page+".html"),function(a){l()},function(a){t={app:"error",page:"404"},e.importHref(e.resolveUrl("/src/apps/"+t.app+"/"+t.page+".html"),function(a){l()},null,!0)},!0)},changePath:function(a){this.$.changePath.setAttribute("href",a),this.$.changePath.click()},getLocales:function(a,e,t){var o=function(){var o=JSON.parse(JSON.stringify(locales.global));if("undefined"!=typeof locales.layouts[a])for(var l in locales.layouts[a])for(var n in locales.layouts[a][l])o[l][n]=locales.layouts[a][l][n];for(var l in locales.apps[e])for(var n in locales.apps[e][l])o[l][n]=locales.apps[e][l][n];t(o)},l={global:!1,layout:!1,app:!1,loaded:function(a){this[a]=!0,this.global&&this.layout&&this.app&&o()}};"undefined"==typeof locales&&(locales={global:null,apps:{},layouts:{}}),null==locales.global?axios.get("/src/apps/localize.json").then(function(a){locales.global=a.data,l.loaded("global")}):l.loaded("global"),"undefined"==typeof locales.layouts[a]?axios.get("/src/template/"+a+"/localize.json").then(function(e){locales.layouts[a]=e.data,l.loaded("layout")}):l.loaded("layout"),"undefined"==typeof locales.apps[e]?axios.get("/src/apps/"+e+"/localize.json").then(function(a){locales.apps[e]=a.data,l.loaded("app")}):l.loaded("app")},checkRole:function(a){var e=this,t=!0;return this.role.map(function(o,l){o.path==a.app+"/"+a.page?o.role.map(function(a){e.auth.role==a&&(t=!1)}):t=!1}),t}});
//# sourceMappingURL=data:application/json;base64,
